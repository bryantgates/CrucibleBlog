@using CrucibleBlog.Enums;
@using CrucibleBlog.Services.Interfaces;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<CrucibleBlog.Models.BlogPost>

@inject IImageService _ImageService

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<div class="axil-post-list-area axil-section-gap bg-color-white">
	<div class="container">
		<div class="row">
			<div class="col-lg-12">
				<div class="page-title">
					<h2 class="title mb--40">Articles By This Author</h2>
				</div>
			</div>
			<div>
                @foreach (BlogPost blogPost in Model)
                {
                    <partial name="_BlogCard" model="@blogPost" />
                }

				<div>
					<div>
						Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
					</div>

					@Html.PagedListPager(Model, pageNum => Url.Action("Index", new {pageNum }),
					new PagedListRenderOptions{
					LiElementClasses = new string[] {"my-page-item"},
					PageClasses = new string[] {"my-page-link"}
					})

				</div>

			</div>
		</div>
	</div>
</div>

@*<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Abstract)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPublished)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Abstract)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Slug)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPublished)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImageData)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImageType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@
